name: API Integration Tests

on:
  repository_dispatch:
    types: 
      - deploy-completed 

jobs:
  track-deployments:
    runs-on: ubuntu-latest
    outputs:
      all_completed: ${{ steps.check-deployments.outputs.all_completed }}
    
    steps:
      - name: Get deployment status
        id: check-deployments
        run: |
          # Criar diretório de status se não existir
          mkdir -p /tmp/deployment-status
          
          # Registrar deploy atual
          SERVICE_NAME="${{ github.event.client_payload.service }}"
          echo "${SERVICE_NAME}" > "/tmp/deployment-status/${SERVICE_NAME}.txt"
          
          # Lista de todos os serviços necessários
          REQUIRED_SERVICES=("microservice-1" "microservice-2" "microservice-3")
          
          # Verificar se todos os serviços têm arquivo de status
          ALL_COMPLETED=true
          for service in "${REQUIRED_SERVICES[@]}"; do
            if [ ! -f "/tmp/deployment-status/${service}.txt" ]; then
              ALL_COMPLETED=false
              break
            fi
          done
          ls /tmp/deployment-status
          # Definir output
          if [ "$ALL_COMPLETED" = true ]; then
            echo "all_completed=true" >> $GITHUB_OUTPUT
          else
            echo "all_completed=false" >> $GITHUB_OUTPUT
          fi
  run-api-tests:
    needs: track-deployments
    if: needs.track-deployments.outputs.all_completed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Run actions/checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run:  echo "npm install"
        
      - name: Wait for deployments to stabilize
        run: |
          echo "Aguardando 30 segundos para garantir que todos os deploys estejam estáveis..."
          sleep 30
          
      - name: Run API Tests
        run: echo "npm run test:api"