name: API Integration Tests

on:
  repository_dispatch:
    types: 
      - deploy-completed 

jobs:
  track-deployments:
    runs-on: ubuntu-latest
    outputs:
      all_completed: ${{ steps.check-deployments.outputs.all_completed }}
    
    steps:
      - name: Generate unique cache key
        id: cache-key
        run: |
          echo "cache_key=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Download previous deployment status
        uses: actions/cache@v3
        with:
          path: deployment-status
          key: ${{ runner.os }}-deployment-status-${{ steps.cache-key.outputs.cache_key }}
          restore-keys: |
            ${{ runner.os }}-deployment-status-

      - name: Get deployment status
        id: check-deployments
        run: |
          # Criar diretório se não existir
          mkdir -p deployment-status
          
          # Registrar deploy atual
          SERVICE_NAME="${{ github.event.client_payload.service }}"
          echo "Registering deployment for ${SERVICE_NAME}"
          touch "deployment-status/${SERVICE_NAME}.txt"
          
          # Listar arquivos para debug
          echo "Current deployments:"
          ls -la deployment-status/
          
          # Verificar status de todos os serviços
          REQUIRED_SERVICES=("microservice-1" "microservice-2" "microservice-3")
          ALL_COMPLETED=true
          MISSING_SERVICES=""
          
          for service in "${REQUIRED_SERVICES[@]}"; do
            if [ ! -f "deployment-status/${service}.txt" ]; then
              ALL_COMPLETED=false
              MISSING_SERVICES="${MISSING_SERVICES} ${service}"
            fi
          done
          
          # Log para debug
          echo "Deployments found: $(ls deployment-status/ | tr '\n' ' ')"
          echo "Missing services:${MISSING_SERVICES}"
          
          # Definir output
          if [ "$ALL_COMPLETED" = true ]; then
            echo "all_completed=true" >> $GITHUB_OUTPUT
            echo "All services deployed successfully!"
            # Limpar status quando todos completarem
            rm -rf deployment-status/*
          else
            echo "all_completed=false" >> $GITHUB_OUTPUT
            echo "Waiting for:${MISSING_SERVICES}"
          fi

  run-api-tests:
    needs: track-deployments
    if: needs.track-deployments.outputs.all_completed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Run actions/checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run:  echo "npm install"
        
      - name: Wait for deployments to stabilize
        run: |
          echo "Aguardando 30 segundos para garantir que todos os deploys estejam estáveis..."
          sleep 30
          
      - name: Run API Tests
        run: echo "npm run test:api"
      
      - name: Clear cache on failure
        if: failure()
        run: |
          rm -rf deployment-status/*